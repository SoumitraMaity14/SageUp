<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Edit Profile</title>
  <link rel="stylesheet" href="/css/edit-profile.css">
</head>
<body>
  <main class="edit-container">
    <h2>Edit Your Profile</h2>
    <form id="editProfileForm">
      <label>Type:</label>
      <select name="type" required>
        <option value="private_tutor">Private Tutor</option>
        <option value="coaching_center">Coaching Center</option>
        <option value="small_institute">Small Institute</option>
      </select>

      <label>Subjects Offered:</label>
      <input type="text" name="subjectsOffered" required placeholder="Comma-separated, e.g., Math, Physics">

      <label>Location:</label>
      <input type="text" name="location" required>

      <label>Experience (years):</label>
      <input type="number" name="experience" required>

      <label>Description:</label>
      <textarea name="description" required></textarea>

      <label>Availability Days:</label>
      <input type="text" name="availabilityDays" required placeholder="e.g., Monday, Wednesday">

      <label>Availability Time Slots:</label>
      <input type="text" name="availabilityTimeSlots" required placeholder="e.g., 2PM-4PM">

      <label>Fees:</label>
      <input type="number" name="fees" required>

      <button type="submit">Update Profile</button>
    </form>
  </main>

  <script>
    const form = document.getElementById('editProfileForm');
    const urlParams = new URLSearchParams(window.location.search);
    const profileId = urlParams.get('id');

    async function loadProfile() {
      try {
        const res = await fetch('/api/profiles');
        const data = await res.json();
        const profile = data.profiles.find(p => p._id === profileId);
        if (!profile) return alert('Profile not found');

        form.type.value = profile.type;
        form.subjectsOffered.value = profile.subjectsOffered.join(', ');
        form.location.value = profile.location;
        form.experience.value = profile.experience;
        form.description.value = profile.description;
        form.availabilityDays.value = profile.availability?.days?.join(', ') || '';
        form.availabilityTimeSlots.value = profile.availability?.timeSlots?.join(', ') || '';
        form.fees.value = profile.fees;
      } catch (err) {
        console.error(err);
        alert('Failed to load profile data');
      }
    }

    form.addEventListener('submit', async (e) => {
      e.preventDefault();

      const updatedData = {
        type: form.type.value,
        subjectsOffered: form.subjectsOffered.value.split(',').map(s => s.trim()),
        location: form.location.value,
        experience: parseInt(form.experience.value),
        description: form.description.value,
        availability: {
          days: form.availabilityDays.value.split(',').map(d => d.trim()),
          timeSlots: form.availabilityTimeSlots.value.split(',').map(t => t.trim())
        },
        fees: parseFloat(form.fees.value)
      };

      try {
        const res = await fetch('/api/profiles/me', {
          method: 'PUT',
          headers: {
            'Content-Type': 'application/json',
            'Authorization': 'Bearer ' + localStorage.getItem('token')
          },
          body: JSON.stringify(updatedData)
        });

        if (!res.ok) throw new Error('Update failed');
        alert('Profile updated successfully!');
        window.location.href = '/'; // redirect to homepage
      } catch (err) {
        console.error(err);
        alert('Failed to update profile');
      }
    });

    loadProfile();
  </script>
</body>
</html>
