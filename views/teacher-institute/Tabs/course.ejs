<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <title>Your Subjects</title>
  <style>
    .subject-dashboard {
      max-width: 1100px;

    }

    h3 {
      margin: 0;
    }

    .top-section h3 {
      font-size: 20px;
      margin-bottom: 15px;
    }

    .top-section {
      display: flex;
      justify-content: space-between;
      align-items: flex-start;
      flex-wrap: wrap;
      margin-bottom: 30px;
    }

    .greeting-column {
      flex: 1;
      margin-bottom: 20px;
    }

    .greeting-column h3 {
      margin: 0 0 10px;
    }

    .subject-stat-box {
      flex: 1;
      background: #f8f9fc;
      border-radius: 10px;
      text-align: center;
      display: flex;
      flex-direction: column;
      justify-content: center;
    }

    .subj-btn {
      display: inline-flex;
      align-items: center;
      gap: 8px;
      padding: 10px 20px;
      background-color: #5c60f5;
      color: white;
      border: none;
      border-radius: 10px;
      cursor: pointer;
      font-weight: 700;
      align-self: center;
      transition: background-color 0.3s ease;
    }

    .subj-btn .icon {
      width: 20px;
      height: 20px;
      color: white;
      font-weight: 700;
    }

    .subj-description {
      background: linear-gradient(135deg, #c0eaff, #e0f7ff);
      /* soft sky gradient */
      box-shadow: 0 4px 12px rgba(0, 168, 255, 0.2);
      /* light sky-blue shadow */
      color: #003344;
      /* optional: better contrast for text on light background */
    }


    .subject-stats {
      display: flex;
      flex: 2;
      justify-content: space-between;
      gap: 20px;
    }



    .subject-stat-box h4 {
      margin: 0;
      font-size: 14px;
      color: #666;
    }

    .subject-stat-box p {
      margin: 10px 0 0;
      font-size: 20px;
      font-weight: bold;
      color: #333;
    }

    .form-container {
      display: none;
      margin-bottom: 30px;
      background: #f9f9f9;
      padding: 20px;
      border-radius: 10px;
    }

    label {
      display: block;
      margin-top: 10px;
    }

    input,
    select {
      width: 100%;
      padding: 8px;
      margin-top: 5px;
      border: 1px solid #ccc;
      border-radius: 5px;
    }

    .subject-table {
      width: 100%;
      border-collapse: collapse;
      margin-top: 30px;
      background-color: #ffffff;
      box-shadow: 0 4px 10px rgba(0, 0, 0, 0.05);
    }

  .subject-table th {
  background-color: #E2E8F0;
}

.subject-table th:last-child {
  width: 80px;
  background-color: #E2E8F0;
}


    .subject-table th,
    .subject-table td {
      padding: 12px 16px;
      text-align: left;
      border-bottom: 1px solid #E2E8F0;
    }


    .subject-table td:last-child {
      text-align: center;
    }

    .serial-id {
      color: #617DED;
      font-weight: bold;
    }


    .dropdown-content a {
      cursor: pointer;
    }
  </style>
</head>

<body>
  <div class="subject-dashboard">
    <div class="top-section">

      <div class="subject-stats">
        <div class="subject-stat-box">
          <h3>üëã <%= user.name %>! </h3>
          <button class="subj-btn" onclick="toggleForm()">
            <svg xmlns="http://www.w3.org/2000/svg" class="icon" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6" />
            </svg>
            New Subject
          </button>

        </div>
        <div class="subject-stat-box subj-description">
          <h4>Total Subjects</h4>
          <p>
            <%= subjects.length %>
          </p>
        </div>
        <div class="subject-stat-box subj-description">
          <h4>Total Hours / Week</h4>
          <p>
            <%= subjects.reduce((total, sub)=> {
              return total + ((sub.availability?.timeSlots?.length || 0) * (sub.availability?.days?.length || 0));
              }, 0) %> hrs
          </p>
        </div>
        <div class="subject-stat-box subj-description">
          <h4>Total Days / Week</h4>
          <p>
            <%= subjects.reduce((total, sub)=> {
              return total + (sub.availability?.days?.length || 0);
              }, 0) %> days
          </p>
        </div>
      </div>
    </div>

    <!-- Subject Form -->
    <div class="form-container" id="formContainer">
      <form id="subjectForm">
        <h3>
          <%= editMode ? 'Edit' : 'Create' %> Subject
        </h3>
        <input type="hidden" name="subjectId" />

        <label>Subject Name:</label>
        <input type="text" name="name" required />

        <label>Category:</label>
        <input type="text" name="category" />

        <label>Level:</label>
        <select name="level">
          <option value="beginner">Beginner</option>
          <option value="intermediate">Intermediate</option>
          <option value="advanced">Advanced</option>
        </select>

        <label>Location (optional):</label>
        <input type="text" name="location" />

        <label>Days (comma separated):</label>
        <input type="text" name="days" placeholder="e.g., Monday,Wednesday" />

        <label>Time Slots (comma separated):</label>
        <input type="text" name="timeSlots" placeholder="e.g., 10AM-12PM,4PM-6PM" />

        <button type="submit" class="btn-primary">
          <%= editMode ? 'Update' : 'Create' %> Subject
        </button>
      </form>
    </div>

    <!-- Subjects Table -->
    <table class="subject-table">
      <thead>
        <tr>
          <th>Serial</th>
          <th>Subject</th>
          <th>Category</th>
          <th>Level</th>
          <th>Location</th>
          <th>Days</th>
          <th>Time Slots</th>
          <th> &nbsp;</th>
        </tr>
      </thead>
      <tbody>
        <% subjects.forEach((subject, index)=> { %>
          <tr data-id="<%= subject._id %>">
            <td class="serial-id">#SUB<%= (index + 1).toString().padStart(2, '0' ) %>
            </td>
            <td>
              <%= subject.name %>
            </td>
            <td>
              <%= subject.category || 'N/A' %>
            </td>
            <td>
              <%= subject.level %>
            </td>
            <td>
              <%= subject.location || 'N/A' %>
            </td>
            <td>
              <%= (subject.availability?.days || []).join(', ') %></td>
        <td><%= (subject.availability?.timeSlots || []).join(' , ') %></td>
        <td>
          <a onclick="editSubject(' <%=subject._id %>')" title="Edit">üëÅÔ∏è</a>
                &nbsp; | &nbsp;
                <a onclick="deleteSubject('<%= subject._id %>')" title="Delete">üóëÔ∏è</a>
            </td>
          </tr>
          <% }) %>
      </tbody>
    </table>

  </div>

  <script>
    function toggleForm() {
      const form = document.getElementById('formContainer');
      form.style.display = form.style.display === 'block' ? 'none' : 'block';
    }

    const form = document.getElementById('subjectForm');

    form.addEventListener('submit', async function (e) {
      e.preventDefault();
      const formData = new FormData(form);
      const subjectId = formData.get('subjectId');

      const body = {
        name: formData.get('name'),
        category: formData.get('category'),
        level: formData.get('level'),
        location: formData.get('location'),
        availability: {
          days: formData.get('days').split(',').map(d => d.trim()),
          timeSlots: formData.get('timeSlots').split(',').map(t => t.trim())
        }
      };

      const url = subjectId ? `/api/subjects/${subjectId}` : '/api/subjects';
      const method = subjectId ? 'PUT' : 'POST';

      const res = await fetch(url, {
        method,
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(body)
      });

      if (res.ok) {
        window.location.reload();
      } else {
        alert('Error: Could not save subject');
      }
    });

    async function deleteSubject(id) {
      if (!confirm('Are you sure you want to delete this subject?')) return;

      const res = await fetch(`/api/subjects/${id}`, { method: 'DELETE' });
      if (res.ok) window.location.reload();
      else alert('Failed to delete subject');
    }

    function editSubject(id) {
      const row = document.querySelector(`[data-id="${id}"]`);
      const cells = row.querySelectorAll('td');

      form.subjectId.value = id;
      form.name.value = cells[0].innerText;
      form.category.value = cells[1].innerText;
      form.level.value = cells[2].innerText;
      form.location.value = cells[3].innerText;
      form.days.value = cells[4].innerText;
      form.timeSlots.value = cells[5].innerText;

      document.getElementById('formContainer').style.display = 'block';
      form.scrollIntoView({ behavior: 'smooth' });
    }
  </script>
</body>

</html>
